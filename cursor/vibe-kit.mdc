---
description: "Vibe Kit - Context Engineering for AI Development with structured MD files"
globs: ["**/*.{ts,tsx,js,jsx,py,rs,go}"]
alwaysApply: true
---

# Vibe Kit - Context Engineering

## Purpose

Context Engineering toolkit that provides structured markdown files to enrich AI assistants with project standards, patterns, and guidelines.

## Standards Reference

- @.vibe-kit/standards/README.md - Complete development standards
- @.vibe-kit/standards/code-style.md - Code style guide
- @.vibe-kit/standards/testing.md - Testing patterns
- @.vibe-kit/standards/architecture.md - Architecture patterns
- @.vibe-kit/standards/ai-guidelines.md - AI development guidelines

## Type Safety

- @.vibe-kit/types/strict.tsconfig.json - Strict TypeScript configuration
- @.vibe-kit/types/global.d.ts - Global type definitions

## Quality Checks

- @.vibe-kit/hooks/pre-commit.sh - Pre-commit quality checks
- @.vibe-kit/hooks/pre-push.sh - Pre-push validation

## AI Commands

- @.vibe-kit/commands/analyze.md - **Analyze and customize standards for your project**
- @.vibe-kit/commands/create-component.md - Create new component following standards
- @.vibe-kit/commands/create-feature.md - Create new feature with full structure
- @.vibe-kit/commands/run-tests.md - Run comprehensive test suite
- @.vibe-kit/commands/quality-check.md - Perform quality checks and fixes
- @.vibe-kit/commands/add-documentation.md - Add proper documentation

## Quick Commands

- "Create component" - Create new component following standards
- "Add tests" - Add comprehensive test coverage
- "Fix styling" - Apply project styling patterns
- "Add documentation" - Add proper documentation

## Workflow

1. **First-time setup**: Run @.vibe-kit/commands/analyze.md to customize standards
2. Check standards first (@.vibe-kit/standards/)
3. Follow project patterns
4. Include proper testing
5. Ensure type safety
6. Run quality checks
7. Add documentation
